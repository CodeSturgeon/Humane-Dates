<project name="JsTestDriver-Boilerplate" default="test" basedir=".">
  <description>Sample boilerplate for a test driven JS/CSS project.</description>

  <!-- set global properties for this build -->
  <property name="server.port" value="8081"/>

  <property name="lib.dir" location="lib"/>
  <property name="jstestdriver.jar" location="${lib.dir}/jsTestDriver-1.2.2.jar"/>
  <property name="test.dir" location="src-test"/>
  <property name="jstestdriver.conf" location="jsTestDriver.conf"/>
  <property name="jstestdriver.output.dir" location="${test.dir}/output"/>

  <property name="browser.safari" value="${lib.dir}/launch-safari.sh"/>
  <property name="browser.chrome" value="${lib.dir}/launch-chrome.sh"/>
  <property name="browser.firefox" value="${lib.dir}/launch-firefox.sh"/>
  <!--<property name="browser.firefox" value="/Applications/Firefox.app/Contents/MacOS/firefox"/>-->

  <target name="install">
  	<chmod perm="+x" type="file">
	  <fileset dir="${lib.dir}">
	    <include name="*.sh"/>
	  </fileset>
	</chmod>
    <!-- Fails silently if the profile already exists. -->
  	<exec executable="/bin/bash" dir="${lib.dir}">
      <arg value="init-firefox.sh" />
    </exec>
  </target>

  <target name="test">
    <mkdir dir="${jstestdriver.output.dir}"/>

    <java jar="${jstestdriver.jar}" fork="true">
      <arg value="--config"/>
      <arg value="${jstestdriver.conf}"/>
      <arg value="--browser"/>
      <arg value="${browser.firefox},${browser.safari},${browser.chrome}"/>
	  <arg value="--tests"/>
      <arg value="all"/>
      <arg value="--port"/>
      <arg value="${server.port}"/>
      <arg value="--testOutput"/>
	  <arg value="${jstestdriver.output.dir}"/>
	</java>

	<!-- FIXME this will quit all Safari windows, even existing ones. -->
	<exec executable="/bin/bash" dir="${lib.dir}">
      <arg value="quit-safari.sh" />
    </exec>
  </target>

  <target name="clean">
  	<delete dir="${jstestdriver.output.dir}"/>
  	<mkdir dir="${jstestdriver.output.dir}"/>
  </target>
</project>